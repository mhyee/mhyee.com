#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  items.delete_if {|item| item[:publish] == false }
end

compile '*' do
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if item.binary? or ext == "html"
    # don’t filter binary items
  elsif ext == "css"
    # Apply CSS compression and nothing else
    filter :rainpress
  elsif ext == "erb"
    filter :erb, :trim_mode => "-"

    # Set the appropriate layout (default or none)
    layout 'default' unless item[:layout] == "none"
  else
    # Apply Markdown (with rdiscount)
    filter :rdiscount, :extensions => %w( strict smart )

    # FYDP posts need syntax colouring
    if item.identifier.include? "fydp"
      filter :colorize_syntax, :default_colorizer => :pygmentize
    end

    # Set the appropriate layout (default or none)
    layout 'default' unless item[:layout] == "none"
  end
end


# Put all styles in the /styles directory
route '/styles/*' do
  item.identifier.chop + '.' + item[:extension]
end

route '/' do
  '/index.html'
end

route '/errors/' do
  '/errors/index.html'
end

route '/fydp/' do
  '/fydp/index.html'
end

route '/publications/' do
  '/publications/index.html'
end

route '/fydp/images/' do
  '/fydp/images/index.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo.html
    item.identifier.chop + '.' + 'html'
  end
end

# UTF-8 and HTML5; need ugly so that code blocks don't have indents
layout '*', :haml, :encoding => "UTF-8", :format => :html5, :ugly => true
